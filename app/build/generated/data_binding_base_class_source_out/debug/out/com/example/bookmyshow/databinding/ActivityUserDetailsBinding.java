// Generated by view binder compiler. Do not edit!
package com.example.bookmyshow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bookmyshow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText etUserAddress;

  @NonNull
  public final EditText etUserEmail;

  @NonNull
  public final EditText etUserMobileNumber;

  @NonNull
  public final EditText etUserName;

  @NonNull
  public final ImageView ivUserImage;

  @NonNull
  public final TextView tvEditProfile;

  @NonNull
  public final TextView tvUserAddress;

  @NonNull
  public final TextView tvUserEmail;

  @NonNull
  public final TextView tvUserMobileNumber;

  @NonNull
  public final TextView tvUserName;

  @NonNull
  public final View vTopBarEditProfile;

  @NonNull
  public final CardView view2;

  @NonNull
  public final LinearLayout viewUserLinearLayout;

  private ActivityUserDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText etUserAddress, @NonNull EditText etUserEmail,
      @NonNull EditText etUserMobileNumber, @NonNull EditText etUserName,
      @NonNull ImageView ivUserImage, @NonNull TextView tvEditProfile,
      @NonNull TextView tvUserAddress, @NonNull TextView tvUserEmail,
      @NonNull TextView tvUserMobileNumber, @NonNull TextView tvUserName,
      @NonNull View vTopBarEditProfile, @NonNull CardView view2,
      @NonNull LinearLayout viewUserLinearLayout) {
    this.rootView = rootView;
    this.etUserAddress = etUserAddress;
    this.etUserEmail = etUserEmail;
    this.etUserMobileNumber = etUserMobileNumber;
    this.etUserName = etUserName;
    this.ivUserImage = ivUserImage;
    this.tvEditProfile = tvEditProfile;
    this.tvUserAddress = tvUserAddress;
    this.tvUserEmail = tvUserEmail;
    this.tvUserMobileNumber = tvUserMobileNumber;
    this.tvUserName = tvUserName;
    this.vTopBarEditProfile = vTopBarEditProfile;
    this.view2 = view2;
    this.viewUserLinearLayout = viewUserLinearLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etUserAddress;
      EditText etUserAddress = ViewBindings.findChildViewById(rootView, id);
      if (etUserAddress == null) {
        break missingId;
      }

      id = R.id.etUserEmail;
      EditText etUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (etUserEmail == null) {
        break missingId;
      }

      id = R.id.etUserMobileNumber;
      EditText etUserMobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (etUserMobileNumber == null) {
        break missingId;
      }

      id = R.id.etUserName;
      EditText etUserName = ViewBindings.findChildViewById(rootView, id);
      if (etUserName == null) {
        break missingId;
      }

      id = R.id.ivUserImage;
      ImageView ivUserImage = ViewBindings.findChildViewById(rootView, id);
      if (ivUserImage == null) {
        break missingId;
      }

      id = R.id.tvEditProfile;
      TextView tvEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (tvEditProfile == null) {
        break missingId;
      }

      id = R.id.tvUserAddress;
      TextView tvUserAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvUserAddress == null) {
        break missingId;
      }

      id = R.id.tvUserEmail;
      TextView tvUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvUserEmail == null) {
        break missingId;
      }

      id = R.id.tvUserMobileNumber;
      TextView tvUserMobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvUserMobileNumber == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      id = R.id.vTopBarEditProfile;
      View vTopBarEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (vTopBarEditProfile == null) {
        break missingId;
      }

      id = R.id.view2;
      CardView view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.viewUserLinearLayout;
      LinearLayout viewUserLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (viewUserLinearLayout == null) {
        break missingId;
      }

      return new ActivityUserDetailsBinding((ConstraintLayout) rootView, etUserAddress, etUserEmail,
          etUserMobileNumber, etUserName, ivUserImage, tvEditProfile, tvUserAddress, tvUserEmail,
          tvUserMobileNumber, tvUserName, vTopBarEditProfile, view2, viewUserLinearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
