// Generated by view binder compiler. Do not edit!
package com.example.bookmyshow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bookmyshow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPurchaseHistoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnEdit;

  @NonNull
  public final Button btnGoToMyHome;

  @NonNull
  public final Button btnMovieCancel;

  @NonNull
  public final Button btnMovieEdit;

  @NonNull
  public final LinearLayout btnMovieShowHide;

  @NonNull
  public final LinearLayout btnShowHide;

  @NonNull
  public final Button btnUpdateEvent;

  @NonNull
  public final LinearLayout editEventLinearLayout;

  @NonNull
  public final ImageView ivMoviePurchaseImage;

  @NonNull
  public final ImageView ivPurchaseImage;

  @NonNull
  public final ConstraintLayout moviePurchaseHistoryEditCancelConstraintLayout;

  @NonNull
  public final ConstraintLayout purchaseHistoryEditCancelConstraintLayout;

  @NonNull
  public final TextView tvMoviePurchaseAmountPaid;

  @NonNull
  public final TextView tvMoviePurchaseDate;

  @NonNull
  public final TextView tvMoviePurchaseNoOfTickets;

  @NonNull
  public final TextView tvMoviePurchasePrice;

  @NonNull
  public final TextView tvMoviePurchaseTickets;

  @NonNull
  public final TextView tvMoviePurchaseTime;

  @NonNull
  public final TextView tvMoviePurchaseTitle;

  @NonNull
  public final TextView tvPurchaseAmountPaid;

  @NonNull
  public final TextView tvPurchaseDate;

  @NonNull
  public final TextView tvPurchaseNoOfTickets;

  @NonNull
  public final TextView tvPurchasePrice;

  @NonNull
  public final TextView tvPurchaseTickets;

  @NonNull
  public final TextView tvPurchaseTime;

  @NonNull
  public final TextView tvPurchaseTitle;

  @NonNull
  public final TextView tvPurchaseTopText;

  @NonNull
  public final EditText updateEventDate;

  @NonNull
  public final EditText updateEventNoOfTickets;

  @NonNull
  public final EditText updateEventTime;

  @NonNull
  public final View vTopBarPurchaseHistory;

  private ActivityPurchaseHistoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnCancel, @NonNull Button btnEdit, @NonNull Button btnGoToMyHome,
      @NonNull Button btnMovieCancel, @NonNull Button btnMovieEdit,
      @NonNull LinearLayout btnMovieShowHide, @NonNull LinearLayout btnShowHide,
      @NonNull Button btnUpdateEvent, @NonNull LinearLayout editEventLinearLayout,
      @NonNull ImageView ivMoviePurchaseImage, @NonNull ImageView ivPurchaseImage,
      @NonNull ConstraintLayout moviePurchaseHistoryEditCancelConstraintLayout,
      @NonNull ConstraintLayout purchaseHistoryEditCancelConstraintLayout,
      @NonNull TextView tvMoviePurchaseAmountPaid, @NonNull TextView tvMoviePurchaseDate,
      @NonNull TextView tvMoviePurchaseNoOfTickets, @NonNull TextView tvMoviePurchasePrice,
      @NonNull TextView tvMoviePurchaseTickets, @NonNull TextView tvMoviePurchaseTime,
      @NonNull TextView tvMoviePurchaseTitle, @NonNull TextView tvPurchaseAmountPaid,
      @NonNull TextView tvPurchaseDate, @NonNull TextView tvPurchaseNoOfTickets,
      @NonNull TextView tvPurchasePrice, @NonNull TextView tvPurchaseTickets,
      @NonNull TextView tvPurchaseTime, @NonNull TextView tvPurchaseTitle,
      @NonNull TextView tvPurchaseTopText, @NonNull EditText updateEventDate,
      @NonNull EditText updateEventNoOfTickets, @NonNull EditText updateEventTime,
      @NonNull View vTopBarPurchaseHistory) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnEdit = btnEdit;
    this.btnGoToMyHome = btnGoToMyHome;
    this.btnMovieCancel = btnMovieCancel;
    this.btnMovieEdit = btnMovieEdit;
    this.btnMovieShowHide = btnMovieShowHide;
    this.btnShowHide = btnShowHide;
    this.btnUpdateEvent = btnUpdateEvent;
    this.editEventLinearLayout = editEventLinearLayout;
    this.ivMoviePurchaseImage = ivMoviePurchaseImage;
    this.ivPurchaseImage = ivPurchaseImage;
    this.moviePurchaseHistoryEditCancelConstraintLayout = moviePurchaseHistoryEditCancelConstraintLayout;
    this.purchaseHistoryEditCancelConstraintLayout = purchaseHistoryEditCancelConstraintLayout;
    this.tvMoviePurchaseAmountPaid = tvMoviePurchaseAmountPaid;
    this.tvMoviePurchaseDate = tvMoviePurchaseDate;
    this.tvMoviePurchaseNoOfTickets = tvMoviePurchaseNoOfTickets;
    this.tvMoviePurchasePrice = tvMoviePurchasePrice;
    this.tvMoviePurchaseTickets = tvMoviePurchaseTickets;
    this.tvMoviePurchaseTime = tvMoviePurchaseTime;
    this.tvMoviePurchaseTitle = tvMoviePurchaseTitle;
    this.tvPurchaseAmountPaid = tvPurchaseAmountPaid;
    this.tvPurchaseDate = tvPurchaseDate;
    this.tvPurchaseNoOfTickets = tvPurchaseNoOfTickets;
    this.tvPurchasePrice = tvPurchasePrice;
    this.tvPurchaseTickets = tvPurchaseTickets;
    this.tvPurchaseTime = tvPurchaseTime;
    this.tvPurchaseTitle = tvPurchaseTitle;
    this.tvPurchaseTopText = tvPurchaseTopText;
    this.updateEventDate = updateEventDate;
    this.updateEventNoOfTickets = updateEventNoOfTickets;
    this.updateEventTime = updateEventTime;
    this.vTopBarPurchaseHistory = vTopBarPurchaseHistory;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPurchaseHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPurchaseHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_purchase_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPurchaseHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      Button btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.btnGoToMyHome;
      Button btnGoToMyHome = ViewBindings.findChildViewById(rootView, id);
      if (btnGoToMyHome == null) {
        break missingId;
      }

      id = R.id.btnMovieCancel;
      Button btnMovieCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnMovieCancel == null) {
        break missingId;
      }

      id = R.id.btnMovieEdit;
      Button btnMovieEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnMovieEdit == null) {
        break missingId;
      }

      id = R.id.btnMovieShowHide;
      LinearLayout btnMovieShowHide = ViewBindings.findChildViewById(rootView, id);
      if (btnMovieShowHide == null) {
        break missingId;
      }

      id = R.id.btnShowHide;
      LinearLayout btnShowHide = ViewBindings.findChildViewById(rootView, id);
      if (btnShowHide == null) {
        break missingId;
      }

      id = R.id.btnUpdateEvent;
      Button btnUpdateEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateEvent == null) {
        break missingId;
      }

      id = R.id.editEventLinearLayout;
      LinearLayout editEventLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (editEventLinearLayout == null) {
        break missingId;
      }

      id = R.id.ivMoviePurchaseImage;
      ImageView ivMoviePurchaseImage = ViewBindings.findChildViewById(rootView, id);
      if (ivMoviePurchaseImage == null) {
        break missingId;
      }

      id = R.id.ivPurchaseImage;
      ImageView ivPurchaseImage = ViewBindings.findChildViewById(rootView, id);
      if (ivPurchaseImage == null) {
        break missingId;
      }

      id = R.id.moviePurchaseHistoryEditCancelConstraintLayout;
      ConstraintLayout moviePurchaseHistoryEditCancelConstraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (moviePurchaseHistoryEditCancelConstraintLayout == null) {
        break missingId;
      }

      id = R.id.purchaseHistoryEditCancelConstraintLayout;
      ConstraintLayout purchaseHistoryEditCancelConstraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (purchaseHistoryEditCancelConstraintLayout == null) {
        break missingId;
      }

      id = R.id.tvMoviePurchaseAmountPaid;
      TextView tvMoviePurchaseAmountPaid = ViewBindings.findChildViewById(rootView, id);
      if (tvMoviePurchaseAmountPaid == null) {
        break missingId;
      }

      id = R.id.tvMoviePurchaseDate;
      TextView tvMoviePurchaseDate = ViewBindings.findChildViewById(rootView, id);
      if (tvMoviePurchaseDate == null) {
        break missingId;
      }

      id = R.id.tvMoviePurchaseNoOfTickets;
      TextView tvMoviePurchaseNoOfTickets = ViewBindings.findChildViewById(rootView, id);
      if (tvMoviePurchaseNoOfTickets == null) {
        break missingId;
      }

      id = R.id.tvMoviePurchasePrice;
      TextView tvMoviePurchasePrice = ViewBindings.findChildViewById(rootView, id);
      if (tvMoviePurchasePrice == null) {
        break missingId;
      }

      id = R.id.tvMoviePurchaseTickets;
      TextView tvMoviePurchaseTickets = ViewBindings.findChildViewById(rootView, id);
      if (tvMoviePurchaseTickets == null) {
        break missingId;
      }

      id = R.id.tvMoviePurchaseTime;
      TextView tvMoviePurchaseTime = ViewBindings.findChildViewById(rootView, id);
      if (tvMoviePurchaseTime == null) {
        break missingId;
      }

      id = R.id.tvMoviePurchaseTitle;
      TextView tvMoviePurchaseTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvMoviePurchaseTitle == null) {
        break missingId;
      }

      id = R.id.tvPurchaseAmountPaid;
      TextView tvPurchaseAmountPaid = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchaseAmountPaid == null) {
        break missingId;
      }

      id = R.id.tvPurchaseDate;
      TextView tvPurchaseDate = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchaseDate == null) {
        break missingId;
      }

      id = R.id.tvPurchaseNoOfTickets;
      TextView tvPurchaseNoOfTickets = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchaseNoOfTickets == null) {
        break missingId;
      }

      id = R.id.tvPurchasePrice;
      TextView tvPurchasePrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchasePrice == null) {
        break missingId;
      }

      id = R.id.tvPurchaseTickets;
      TextView tvPurchaseTickets = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchaseTickets == null) {
        break missingId;
      }

      id = R.id.tvPurchaseTime;
      TextView tvPurchaseTime = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchaseTime == null) {
        break missingId;
      }

      id = R.id.tvPurchaseTitle;
      TextView tvPurchaseTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchaseTitle == null) {
        break missingId;
      }

      id = R.id.tvPurchaseTopText;
      TextView tvPurchaseTopText = ViewBindings.findChildViewById(rootView, id);
      if (tvPurchaseTopText == null) {
        break missingId;
      }

      id = R.id.updateEventDate;
      EditText updateEventDate = ViewBindings.findChildViewById(rootView, id);
      if (updateEventDate == null) {
        break missingId;
      }

      id = R.id.updateEventNoOfTickets;
      EditText updateEventNoOfTickets = ViewBindings.findChildViewById(rootView, id);
      if (updateEventNoOfTickets == null) {
        break missingId;
      }

      id = R.id.updateEventTime;
      EditText updateEventTime = ViewBindings.findChildViewById(rootView, id);
      if (updateEventTime == null) {
        break missingId;
      }

      id = R.id.vTopBarPurchaseHistory;
      View vTopBarPurchaseHistory = ViewBindings.findChildViewById(rootView, id);
      if (vTopBarPurchaseHistory == null) {
        break missingId;
      }

      return new ActivityPurchaseHistoryBinding((ConstraintLayout) rootView, btnCancel, btnEdit,
          btnGoToMyHome, btnMovieCancel, btnMovieEdit, btnMovieShowHide, btnShowHide,
          btnUpdateEvent, editEventLinearLayout, ivMoviePurchaseImage, ivPurchaseImage,
          moviePurchaseHistoryEditCancelConstraintLayout, purchaseHistoryEditCancelConstraintLayout,
          tvMoviePurchaseAmountPaid, tvMoviePurchaseDate, tvMoviePurchaseNoOfTickets,
          tvMoviePurchasePrice, tvMoviePurchaseTickets, tvMoviePurchaseTime, tvMoviePurchaseTitle,
          tvPurchaseAmountPaid, tvPurchaseDate, tvPurchaseNoOfTickets, tvPurchasePrice,
          tvPurchaseTickets, tvPurchaseTime, tvPurchaseTitle, tvPurchaseTopText, updateEventDate,
          updateEventNoOfTickets, updateEventTime, vTopBarPurchaseHistory);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
