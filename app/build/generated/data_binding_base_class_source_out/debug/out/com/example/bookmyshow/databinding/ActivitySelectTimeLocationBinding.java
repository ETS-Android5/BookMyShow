// Generated by view binder compiler. Do not edit!
package com.example.bookmyshow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bookmyshow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySelectTimeLocationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnMovieDate;

  @NonNull
  public final EditText etMovieDate;

  @NonNull
  public final LinearLayout layoutDate;

  @NonNull
  public final CardView recyclerViewCard;

  @NonNull
  public final RecyclerView timeTheaterRecyclerView;

  private ActivitySelectTimeLocationBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnMovieDate, @NonNull EditText etMovieDate, @NonNull LinearLayout layoutDate,
      @NonNull CardView recyclerViewCard, @NonNull RecyclerView timeTheaterRecyclerView) {
    this.rootView = rootView;
    this.btnMovieDate = btnMovieDate;
    this.etMovieDate = etMovieDate;
    this.layoutDate = layoutDate;
    this.recyclerViewCard = recyclerViewCard;
    this.timeTheaterRecyclerView = timeTheaterRecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySelectTimeLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySelectTimeLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_select_time_location, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySelectTimeLocationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMovieDate;
      Button btnMovieDate = ViewBindings.findChildViewById(rootView, id);
      if (btnMovieDate == null) {
        break missingId;
      }

      id = R.id.etMovieDate;
      EditText etMovieDate = ViewBindings.findChildViewById(rootView, id);
      if (etMovieDate == null) {
        break missingId;
      }

      id = R.id.layoutDate;
      LinearLayout layoutDate = ViewBindings.findChildViewById(rootView, id);
      if (layoutDate == null) {
        break missingId;
      }

      id = R.id.recyclerViewCard;
      CardView recyclerViewCard = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewCard == null) {
        break missingId;
      }

      id = R.id.timeTheaterRecyclerView;
      RecyclerView timeTheaterRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (timeTheaterRecyclerView == null) {
        break missingId;
      }

      return new ActivitySelectTimeLocationBinding((LinearLayout) rootView, btnMovieDate,
          etMovieDate, layoutDate, recyclerViewCard, timeTheaterRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
